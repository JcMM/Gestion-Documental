<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	   		http://www.springframework.org/schema/context
	   		http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
			http://www.springframework.org/schema/jms 
			http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
			">
	
	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />
 	 
	<!-- Scans the classpath for annotated components that will be auto-registered as Spring beans.
	 For example @Controller and @Service. Make sure to set the correct base-package-->
	<context:component-scan base-package="pe.com.munmiraflores.gestiondocumental" />
	
	<!-- Configures the annotation-driven Spring MVC Controller programming model.
	Note that, with Spring 3.0, this tag works in Servlet MVC only!  
	<mvc:annotation-driven />-->


 	<jaxws:client id="gestiondocumentalServiceClient" serviceName="GestiondocumentalServiceImpl"
      serviceClass="pe.com.munmiraflores.gestiondocumental.service.GestiondocumentalService" 
      address="http://localhost:8080/gestiondocumental-soap/GestiondocumentalService" />
      
    
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>
    
   	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/gestiondocumental" />
		<property name="username" value="root" />
		<property name="password" value="mysql" />
	</bean>
	
	
    <!-- 
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
    <property name="messageConverters">
    <list>
      <bean id="messageConverter"
            class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <property name="marshaller" ref="xstreamMarshaller" />
        <property name="unmarshaller" ref="xstreamMarshaller" />
      </bean>
    </list>
    </property>
  </bean>
  
  <bean id="xstreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
    <property name="aliases">
    <props>
      <prop key="documento">pe.com.munmiraflores.gestiondocumental.domain.Documentos</prop>
      <prop key="estado">pe.com.munmiraflores.gestiondocumental.domain.Estados</prop>
      <prop key="seguimiento">pe.com.munmiraflores.gestiondocumental.domain.Seguimiento</prop>
      <prop key="seguimientos">pe.com.munmiraflores.gestiondocumental.domain.Seguimientos</prop>      
      <prop key="tarea">pe.com.munmiraflores.gestiondocumental.domain.Tareas</prop>
    </props>
    </property>
  </bean>
  
    -->
    
    <import resource="security-config.xml" />
       
     
     <bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL">
			<value>tcp://localhost:61616</value>
		</property>
	</bean>

	<!--  para enviar mensajes a server MQ -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>
	
	<!-- LISTENER -->
	<bean id="queueListener"  class="pe.com.munmiraflores.gestiondocumental.mq.ColasListener"/>
		
	<!-- le indicamos como es que debe oir al Mq server -->
	<!--  destination-type="queue" para segiur una cola en MQ -->
	<!--  destination-type="topic" para que varios coloquemos y escuchemos un mismo topic-->
	<jms:listener-container destination-type="queue">
		<!-- para que escuche al topic o cola qwerty ref = beanListener -->
		<jms:listener destination="cola_docs" ref="queueListener" />
	</jms:listener-container>
	
	
</beans>
